package org.generation.ecommerce.service;

import java.util.List;

import org.generation.ecommerce.model.Producto;
import org.generation.ecommerce.model.Usuario;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UsuarioService {
	private final UsuarioRepository usuarioRepository;

	@Autowired
	public UsuarioService(UsuarioRepository usuarioRepository) {
		super();
		this.usuarioRepository = usuarioRepository;
	}//constructor
	
	public List<Usuario> getUsuarios(){
		return usuarioRepository.findAll();
	}//getUsuarios
	
	public Usuario getUsuario(Long id){
		return usuarioRepository.findById(id).orElseThrow(
				()->new IllegalArgumentException("El Usuario con el id " + id + " no existe.")
				);
	}//getProductos
	
	public Usuario deleteUsuario(Long id) {
		Usuario tmpUser=null;
		if(usuarioRepository.existsById(id)) {
			tmpUser = usuarioRepository.findById(id).get();
			usuarioRepository.deleteById(id);
		}//if exist
		return tmpUser;
	}//deleteProducto
	
	public Producto addProducto(Producto producto) {
		return productoRepository.save(producto);
	}//addProducto
	
	public Producto updateProducto(Long id, String nombre, String descripcion, 
		String URL_imagen, Double precio) {
		Producto tmpProd = null;
		if(productoRepository.existsById(id)) {
			tmpProd = productoRepository.findById(id).get();
			if(nombre!=null) tmpProd.setNombre(nombre);
			if(descripcion!=null) tmpProd.setDescripcion(descripcion);
			if(URL_imagen!=null) tmpProd.setURL_imagen(URL_imagen);
			if(precio!=null) tmpProd.setPrecio(precio.doubleValue());
			productoRepository.save(tmpProd);
		}else {
			System.out.println("Update - El producto con el id " + id + " no existe");
		}//if exist
		return tmpProd;
	}//updateProducto
	
	
	
}
